@startuml

class AssignVehicleToEntryController {
   +CreateVehicleToEntryController()
    +getVehicles(): List<Vehicle>
    +getVehicles(index: int): Vehicle
    +getEntries(): List<Entry>
    +getEntries(index: int): Entry
    +assignVehicleToEntry(vehicle: Vehicle, entry: Entry)
}

class AssignVehicleToEntryUI {

}

class Repositories {
    -instance: Repositories
    +getInstance(): Repositories
    +getVehicleRepository(): VehicleRepository
    +getAgendaRepository(): AgendaRepository
    +getOrganizationRepository(): OrganizationRepository
}

class VehicleRepository {
    -vehicles: List<Vehicle>
    +getVehicles(): List<Vehicle>
    +getVehicles(index: int): Vehicle
}

class AgendaRepository {
    -entries: List<Entry>
    +getEntries(): List<Entry>
    +getEntries(index: int): Entry
}

class Entry {
    -vehicles: List<Vehicle>
    +setVehicles(vehicles: List<Vehicle>)
}

class Organization {
}

class OrganizationRepository{
    +getOrganization(): Organization
}

AssignVehicleToEntryUI .>  AssignVehicleToEntryController
AssignVehicleToEntryController  ..>  Repositories : repositories
Repositories ..> VehicleRepository : vehicleRepository
Repositories ..> AgendaRepository : agendaRepository
Repositories -> Repositories : getInstance()
VehicleRepository  -->  Organization : gets vehicle
Repositories  ..>  OrganizationRepository : OrganizationRepository
OrganizationRepository  -->  Organization : has manager
AgendaRepository  -->  Organization : gets entry
Organization "1" --> "*" Entry : assigns vehicles to entry
AssignVehicleToEntryController  .>  Organization : organization

@enduml
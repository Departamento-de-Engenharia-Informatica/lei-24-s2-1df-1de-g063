@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class Collaborator {
     -String name;
     -String adress;
     -String email;
     -String phoneNumber;
     -String idType;
     -String idNumber;
     -LocalDate birthDate;
     -LocalDate admissionDate;
     -String job;
     -List<Skill> skill;

     +equals(Object o)
     +toString()
     +getSkill()
     +setSkill(List<Skill> skill)
}


class HRM{}
class Skills{}
class CollaboratorRepository{


+getCollaboratorRepository
+setCollaboratorRepository
}
class SkillsRepository{
    +getSkills()
}
class Jobs{}
class JobsRepository{
    +getJobs()
}
note left of SkillsRepository
    - used to access the list of
     skills that a collaborator may have
end note
note right of JobsRepository
    - used to access the list of jobs that a collaborator may have
     (every job is there represented regardless the skills of the collaborator in question)
end note

class EmployeeRepository {
    + getOrganizationByManagerEmail(email)
    + getCollaboratorRecord()
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getTaskCategoryRepository()
    + getOrganizationRepository()
    +getJobs()
    +getSkills()
    +getCollaboratorRepository()
}

class RegisterCollaboratorController {
    + RegisterCollaboratorController(EmployeeRepository)
    + getCollaboratorRepository()
    + setCollaboratorRepository(name, birthdate, admission date, address, contact info (mobile and email), ID doc type and respective number)
    - getEmployeeFromSession()
}

note right of RegisterCollaboratorController
    - userEmail is obtained
    from the user session
    - categoryDescription
    is retrieved from selected data
end note

note left of EmployeeRepository
    - used for accessing a list of
    registered collaborators
end note

class RegisterCollaboratorUI {
}

Repositories -> Repositories : instance

RegisterCollaboratorUI .> RegisterCollaboratorController

RegisterCollaboratorController .> Repositories : repositories

RegisterCollaboratorController ..> Collaborator
RegisterCollaboratorController ..> EmployeeRepository : EmployeeRepository

Repositories --> "1" EmployeeRepository
Repositories --> CollaboratorRepository
CollaboratorRepository <-- Collaborator
EmployeeRepository --> "*" HRM

RegisterCollaboratorController ..> "1" HRM

EmployeeRepository "1" --> "*" Collaborator : collaboratorRecord
HRM "1" --> "1..*" Collaborator : register

Repositories --> "1" SkillsRepository
Repositories --> "1" JobsRepository
SkillsRepository --> "*"Skills
JobsRepository --> "*"Jobs
Skills "1..*" --> "1" Collaborator : given to
Jobs "1"--> "1" Collaborator : assigned to

@enduml
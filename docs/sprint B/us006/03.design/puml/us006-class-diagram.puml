@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class VFM {
}

class SystemUser {
    name
    email
    password
    phone
}

class Vehicle {
    -String brand
    -String model
    -double tareWeight
    -double grossWeight
    -double currentKm
    -LocalDate registerDate
    -LocalDate acquisitionDate
    -double checkUpFrequency

    + Vehicle(brand, model, vehicleID, type, grossWeight, tare, currentKm, registerDate, acquisitionDate, checkupFrequency)
    + equals()
    + needsCheckup()


'  +saveTask(task)
}

class VehicleRepository {


    +addVehicle(Vehicle vehicle)
}
class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getCollaboatorRepository()
    + getVehicleRepository()
    + getSkillRepository()
    + getJobRepository()
    + getAuthenticationRepository()

}

class RegisterVehicleController {
    + RegisterVehicleController()
    + createVehicle(String brand,String model,double tareWeight,double grossWeight,double currentKm,LocalDate registerDate,LocalDate acquisitionDate,double checkUpFrequency)
    - getAuthenticationRepository()
    - getVehicleRepository()
    - getVehicleRepository()
}



Repositories -> Repositories : instance


RegisterVehicleUI .> RegisterVehicleController

RegisterVehicleController .> Repositories : repositories

Repositories -> "1" VehicleRepository

RegisterVehicleController ..> VehicleRepository : getVehicleRepository

RegisterVehicleController..> "1" Vehicle : Vehicle

VehicleRepository --> Vehicle

VFM --> SystemUser

Vehicle --> "*" VFM : registered by

@enduml